{% set name = "nyxus" %}
{% set version = "0.8.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/PolusAI/{{ name }}/archive/refs/tags/{{ version }}.tar.gz
  sha256: be9c9a6efc3d36c2e14ab51625652bee33b88294dae64830df40ceec4fecfcae
  patches:
    - 0000-win_2022.patch
build:
  number: 0
  skip: true  # [py<38 or cuda_compiler_version == "11.2"]
  missing_dso_whitelist:
    - '*/nvcuda.dll'   # [win]
  ignore_run_exports_from:
  # The CXX standard library is unused on linux, but used on osx
    - {{ compiler('cxx') }}  # [linux]

requirements:
  build:
    - cmake
    - make  # [not win]
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [cuda_compiler_version != "None"]
    - git
    - ninja  # [win]  

  host:
    - python
    - setuptools
    - pip
    - z5py  # [cuda_compiler_version != "10.2" or not linux] 
    - libtiff
    - libboost-headers
    - nlohmann_json
    - blosc  # [cuda_compiler_version != "10.2" or not linux]
    - pybind11
    - xtensor  # [cuda_compiler_version != "10.2" or not linux] 
    - xsimd  # [cuda_compiler_version != "10.2" or not linux] 
    - numpy
    - pandas
    - dcmtk
    - fmjpeg2koj
    - libarrow
    - m2-patch  # [win]
    - cuda-cudart-dev  # [(cuda_compiler_version or "").startswith("12")]
    - libcufft-dev  # [(cuda_compiler_version or "").startswith("12")]
    - cuda-version {{ cuda_compiler_version }}  # [cuda_compiler_version != "None"]

  run:
    - python
    - {{ pin_compatible('numpy') }}
    - pandas

test:
  requires:
    - pip

  imports:
    - nyxus
  commands:
    - pip check

about:
  home: https://github.com/PolusAI/nyxus
  summary: Scalable library for calculating features from intensity-label image data
  description: |
    Nyxus is a feature-rich, highly optimized, Python/C++ application capable of analyzing images 
    of arbitrary size and assembling complex regions of interest (ROIs) split across multiple image 
    tiles and files. Nyxus can be used via Python or command line and is available in containerized 
    form for reproducible execution. Nyxus computes over 450 combined intensity, texture, and 
    morphological features at the ROI or whole image level with more in development. 
    Key features that make Nyxus unique among other image feature extraction applications is its 
    ability to operate at any scale, its highly validated algorithms, 
    and its modular nature that makes the addition of new features straightforward.
  license: MIT
  license_family: MIT
  license_file: LICENSE
  doc_url: https://nyxus.readthedocs.io/en/latest/
  dev_url: https://github.com/PolusAI/nyxus

extra:
  recipe-maintainers:
    - sameeul
